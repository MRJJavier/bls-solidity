Using network 'test'.


Compiling your contracts...
===========================
> Compiling ./test/BN256G1Helper.sol
> Compiling ./test/BN256G2Helper.sol
> Compilation warnings encountered:

    /home/mrjjavier/Escritorio/Arbitrum/bls-solidity/test/BN256G1Helper.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
,/home/mrjjavier/Escritorio/Arbitrum/bls-solidity/test/BN256G2Helper.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
,/home/mrjjavier/Escritorio/Arbitrum/bls-solidity/contracts/BN256G1.sol:44:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256[4] memory input) internal returns (uint256, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/home/mrjjavier/Escritorio/Arbitrum/bls-solidity/contracts/BN256G1.sol:44:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256[4] memory input) internal returns (uint256, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/home/mrjjavier/Escritorio/Arbitrum/bls-solidity/contracts/BN256G1.sol:44:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256[4] memory input) internal returns (uint256, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/home/mrjjavier/Escritorio/Arbitrum/bls-solidity/contracts/BN256G1.sol:44:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256[4] memory input) internal returns (uint256, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
,/home/mrjjavier/Escritorio/Arbitrum/bls-solidity/contracts/BN256G1.sol:44:3: Warning: Variable is shadowed in inline assembly by an instruction of the same name
  function add(uint256[4] memory input) internal returns (uint256, uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).

> Artifacts written to /tmp/test--13976-ASPja2lqJ0hq
> Compiled successfully using:
   - solc: 0.6.8+commit.0bbfe453.Emscripten.clang

> Migrating CBOR and Witnet into test network
> Migrating CBOR and Witnet into test network

[0m[0m
[0m  Contract: EcGasHelper - Gas consumption analysis[0m
[0m    BN256G1 operations[0m
    [32m  âœ“[0m[90m should add two points (1)[0m[31m (145ms)[0m
    [32m  âœ“[0m[90m should add two points (2)[0m
    [32m  âœ“[0m[90m should add two points (3)[0m
    [32m  âœ“[0m[90m should add two points (4)[0m[33m (47ms)[0m
    [32m  âœ“[0m[90m should add two points (5)[0m
    [32m  âœ“[0m[90m should add two points (6)[0m
    [32m  âœ“[0m[90m invalid: should add two points (1)[0m
    [32m  âœ“[0m[90m invalid: should add two points (2)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (1)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (2)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (3)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (4)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (5)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (6)[0m[33m (43ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (7)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (8)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (9)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (10)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (11)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (12)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (13)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (14)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (15)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (16)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (17)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (18)[0m
    [32m  âœ“[0m[90m invalid: should mul a point with a scalar (1)[0m
    [32m  âœ“[0m[90m invalid: should mul a point with a scalar (2)[0m
    [32m  âœ“[0m[90m should check pair (1)[0m[31m (984ms)[0m
    [32m  âœ“[0m[90m should check pair (2)[0m[31m (285ms)[0m
    [32m  âœ“[0m[90m should check pair (3)[0m[31m (290ms)[0m
    [32m  âœ“[0m[90m should check pair (4)[0m[31m (279ms)[0m
    [32m  âœ“[0m[90m should check pair (5)[0m[31m (276ms)[0m
    [32m  âœ“[0m[90m should check pair (6)[0m[31m (284ms)[0m
    [32m  âœ“[0m[90m invalid: should check pair (1)[0m[31m (272ms)[0m
    [32m  âœ“[0m[90m invalid: should check pair (2)[0m[31m (301ms)[0m
    [32m  âœ“[0m[90m should check batch pair (1)[0m[31m (404ms)[0m
    [32m  âœ“[0m[90m should check batch pair (2)[0m[31m (407ms)[0m
    [32m  âœ“[0m[90m should check batch pair (3)[0m[31m (407ms)[0m
    [32m  âœ“[0m[90m should check hash_to_try (1)[0m[33m (41ms)[0m
    [32m  âœ“[0m[90m should check hash_to_try (2)[0m[33m (39ms)[0m
    [32m  âœ“[0m[90m should check wether is on curve (1)[0m
    [32m  âœ“[0m[90m should check wether is on curve (2)[0m
    [32m  âœ“[0m[90m should check wether is on curve (3)[0m
    [32m  âœ“[0m[90m should check wether is on curve (4)[0m
    [32m  âœ“[0m[90m invalid: should check wether is on curve (1)[0m
    [32m  âœ“[0m[90m invalid: should check wether is on curve (2)[0m
    [32m  âœ“[0m[90m invalid: should check wether is on curve (3)[0m
    [32m  âœ“[0m[90m invalid: should check wether is on curve (4)[0m
    [32m  âœ“[0m[90m should check from compressed (1)[0m
    [32m  âœ“[0m[90m should check from compressed (2)[0m
    [32m  âœ“[0m[90m should check from compressed (3)[0m
    [32m  âœ“[0m[90m should check from compressed (4)[0m
    [32m  âœ“[0m[90m should check from compressed (5)[0m
    [32m  âœ“[0m[90m should check from compressed (6)[0m

[0m  Contract: EcGasHelper - Gas consumption analysis[0m
[0m    BN256G2 operations[0m
    [32m  âœ“[0m[90m should add two points (1)[0m[33m (41ms)[0m
    [32m  âœ“[0m[90m should add two points (2)[0m[33m (47ms)[0m
    [32m  âœ“[0m[90m should add two points (3)[0m
    [32m  âœ“[0m[90m should add two points (4)[0m
    [32m  âœ“[0m[90m invalid: should add two points (1)[0m
    [32m  âœ“[0m[90m invalid: should add two points (2)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (1)[0m[31m (2383ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (2)[0m[31m (2511ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (3)[0m[31m (2440ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (4)[0m[31m (2588ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (5)[0m[31m (3679ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (6)[0m[31m (3378ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (7)[0m[31m (2347ms)[0m
    [32m  âœ“[0m[90m should mul a point with a scalar (8)[0m[31m (2401ms)[0m
    [32m  âœ“[0m[90m invalid: should mul a point with a scalar (1)[0m[31m (2311ms)[0m
    [32m  âœ“[0m[90m invalid: should mul a point with a scalar (2)[0m[31m (2502ms)[0m


[92m [0m[32m 71 passing[0m[90m (33s)[0m

